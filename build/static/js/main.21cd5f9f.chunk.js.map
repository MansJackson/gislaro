{"version":3,"sources":["Loading.js","Card.jsx","styles.js","LibPagination.jsx","Home.jsx","Folder.jsx","Settings.jsx","LibCard.jsx","Filters.jsx","Library.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Loading","type","color","height","width","timeout","AlbumCard","album","callback","useState","genre","selectedGenre","setSelectedGenre","title","cover_image","year","artist","split","albumName","Card","style","display","alignItems","textAlign","margin","flexDirection","padding","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","Select","id","value","onChange","e","target","marginTop","map","el","MenuItem","key","uuidv4","Button","size","onClick","useStyles","makeStyles","form_control","justifyContent","form_element","switch","theme","root","spacing","LibPagination","count","page","setPage","classes","className","Pagination","event","Home","notify","input","setInput","results","setResults","loading","setLoading","searchBarcode","setSearchBarcode","searchMasters","setSearchMasters","setCount","addToLibrary","result","master_url","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","message","handleSearch","preventDefault","query","res","data","pagination","pages","useEffect","Grid","container","justify","onSubmit","FormControl","TextField","label","FormControlLabel","control","Switch","checked","name","item","xs","sm","md","Folder","maxSize","records","Paper","position","length","top","right","cursor","fontSize","Settings","folders","setFolders","formData","setFormData","genres","setGenres","getFolders","handleChange","deleteFolder","Object","keys","direction","folder","LibCard","Filters","selected","setSelected","genreSelected","includes","toggleSelected","classList","contains","getAttribute","parentNode","filter","Chip","clickable","Library","lib","setLib","filteredLib","setFilteredLib","pageResults","setPageResults","searchQuery","setSearchQuery","removeFromLibrary","a","slice","RegExp","filtered","test","forEach","filterResults","Math","ceil","defaultProps","app","backgroundColor","minHeight","notification","bottom","borderRadius","zIndex","TabPanel","children","index","role","hidden","aria-labelledby","Box","p","App","setValue","setNotification","setTimeout","square","Tabs","indicatorColor","textColor","newValue","centered","Tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.21cd5f9f.chunk.js","sourcesContent":["import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function Loading() {\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#3f51b5\"\n      height={300}\n      width={300}\n      timeout={8000}\n    />\n  )\n}","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\n\nimport {\n  Select, MenuItem, Card, Typography, Button, CardMedia, CardContent,\n} from '@material-ui/core';\n\nexport default function AlbumCard({ album, callback }) {\n  const [selectedGenre, setSelectedGenre] = useState(album.genre[0]);\n\n  const {\n    title, genre, cover_image, year,\n  } = album;\n  const artist = title.split(' - ')[0];\n  const albumName = title.split(' - ')[1];\n\n  return (\n    <Card style={{\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'center',\n      margin: '.5rem',\n      flexDirection: 'column',\n      padding: '1rem',\n    }}\n    >\n      <CardMedia\n        style={{ width: 300, height: 300 }}\n        image={cover_image}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n          {albumName}\n          {' '}\n          -\n          {year}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {artist}\n        </Typography>\n        <Select\n          variant=\"outlined\"\n          id=\"demo-simple-select-filled\"\n          value={selectedGenre}\n          onChange={e => setSelectedGenre(e.target.value)}\n          style={{ marginTop: '1rem' }}\n        >\n          {genre.map(el => <MenuItem value={el} key={uuidv4()}>{el}</MenuItem>)}\n        </Select>\n      </CardContent>\n      <Button size=\"medium\" color=\"primary\" onClick={() => callback({ ...album, genre: selectedGenre })}>\n        Add\n      </Button>\n    </Card>\n  );\n}\n\nAlbumCard.propTypes = {\n  callback: propTypes.func.isRequired,\n  album: propTypes.shape({\n    title: propTypes.string,\n    genre: propTypes.arrayOf(propTypes.string),\n    cover_image: propTypes.string,\n    year: propTypes.string,\n  }).isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  form_control: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  form_element: {\n    margin: '.5rem',\n  },\n  switch: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n});\n\nexport default useStyles;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Pagination } from '@material-ui/lab';\nimport propTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function LibPagination({ count, page, setPage }) {\n  const classes = useStyles();\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Pagination count={count} page={page} onChange={handleChange} size=\"small\" />\n    </div>\n  );\n}\n\nLibPagination.propTypes = {\n  count: propTypes.number.isRequired,\n  page: propTypes.number.isRequired,\n  setPage: propTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  TextField, FormControl, Grid, Button, Switch, FormControlLabel,\n} from '@material-ui/core';\nimport propTypes from 'prop-types';\nimport Loading from './Loading';\nimport AlbumCard from './Card';\nimport useStyles from './styles';\nimport LibPagination from './LibPagination';\n\nexport default function Home({ notify }) {\n  const [input, setInput] = useState('');\n  const [results, setResults] = useState();\n  const [loading, setLoading] = useState(false);\n  const [searchBarcode, setSearchBarcode] = useState(false);\n  const [searchMasters, setSearchMasters] = useState(false);\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState();\n  const classes = useStyles();\n\n  function addToLibrary(result) {\n    const {\n      id, genre, title, cover_image, year, master_url,\n    } = result;\n    const album = {\n      id, title, genre, cover_image, year, master_url,\n    };\n    fetch('/api/albums', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(album),\n    })\n      .then(response => response.json())\n      .then(response => { notify(response); })\n      .catch(err => { notify(err.message); });\n  }\n\n  function handleSearch(e) {\n    if (e) e.preventDefault();\n    if (input === '') {\n      notify('Search field can not be empty');\n      return;\n    }\n    let query = `/search?page=${page}`;\n    if (searchBarcode) query += '&barcode=true';\n    if (searchMasters) query += '&masters=true';\n    setLoading(true);\n    setResults(null);\n    setCount(null);\n    fetch(query, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({ query: input }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setLoading(false);\n        setResults(data.results);\n        setCount(data.pagination.pages);\n      });\n  }\n\n  useEffect(() => {\n    if (count) handleSearch();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <form onSubmit={handleSearch}>\n          <FormControl>\n            <TextField\n              className={classes.form_element}\n              onChange={e => setInput(e.target.value)}\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n            <FormControlLabel\n              className={classes.switch}\n              control={(\n                <Switch\n                  checked={searchBarcode}\n                  onChange={() => setSearchBarcode(!searchBarcode)}\n                  name=\"barcode\"\n                  color=\"primary\"\n                />\n              )}\n              label=\"Barcode\"\n            />\n            <FormControlLabel\n              className={classes.switch}\n              control={(\n                <Switch\n                  checked={searchMasters}\n                  onChange={() => setSearchMasters(!searchMasters)}\n                  name=\"barcode\"\n                  color=\"primary\"\n                />\n              )}\n              label=\"Master\"\n            />\n            <Button\n              className={classes.form_element}\n              onClick={handleSearch}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Search\n            </Button>\n          </FormControl>\n        </form>\n      </Grid>\n      <Grid container justify=\"space-evenly\">\n        {results\n          ? results.map(el => (\n            <Grid key={uuidv4()} item xs={12} sm={6} md={4}>\n              <AlbumCard album={el} callback={addToLibrary} />\n            </Grid>\n          ))\n          : ''}\n        {loading && <Loading />}\n      </Grid>\n      <Grid container justify=\"center\">\n        {count ? <LibPagination count={count} page={page} setPage={setPage} /> : null}\n      </Grid>\n    </>\n  );\n}\n\nHome.propTypes = {\n  notify: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Paper, Typography } from '@material-ui/core';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n\nexport default function Folder({\n  data: {\n    maxSize, records, name, genre, id,\n  }, callback,\n}) {\n  return (\n\n    <Paper style={{\n      padding: '1rem',\n      margin: '1rem',\n      textAlign: 'center',\n      position: 'relative',\n    }}\n    >\n      <Typography variant=\"h3\">\n        {name}\n      </Typography>\n      <Typography variant=\"body1\">\n        {records.length}\n        /\n        {maxSize}\n      </Typography>\n      <Typography variant=\"body2\">\n        {genre}\n      </Typography>\n      <DeleteOutlineOutlinedIcon\n        style={{\n          position: 'absolute',\n          top: '.5rem',\n          right: '.5rem',\n          cursor: 'pointer',\n        }}\n        color=\"secondary\"\n        fontSize=\"large\"\n        onClick={() => callback(id)}\n      />\n    </Paper>\n  );\n}\n\nFolder.propTypes = {\n  data: propTypes.shape({\n    maxSize: propTypes.string.isRequired,\n    records: propTypes.arrayOf(propTypes.number).isRequired,\n    name: propTypes.string.isRequired,\n    genre: propTypes.string.isRequired,\n    id: propTypes.string.isRequired,\n  }).isRequired,\n  callback: propTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\nimport {\n  MenuItem, Select, FormControl, TextField, Button, Grid, Typography,\n} from '@material-ui/core';\nimport Folder from './Folder';\nimport useStyles from './styles';\n\nexport default function Settings({ notify }) {\n  const [folders, setFolders] = useState();\n  const [formData, setFormData] = useState();\n  const [genres, setGenres] = useState(['']);\n  const [selectedGenre, setSelectedGenre] = useState(genres[0]);\n  const classes = useStyles();\n\n  function getGenres() {\n    fetch('/api/genres')\n      .then(res => res.json())\n      .then(res => {\n        setGenres(Object.keys(res));\n        setSelectedGenre(Object.keys(res)[0]);\n        setFormData({ ...formData, genre: Object.keys(res)[0] });\n      });\n  }\n\n  function getFolders() {\n    fetch('/api/folders')\n      .then(data => data.json())\n      .then(response => { setFolders(response); })\n      .catch(err => { notify(err.message); });\n  }\n\n  useEffect(() => {\n    getFolders();\n    getGenres();\n    // eslint-disable-next-line\n  }, []);\n\n  function handleChange(e) {\n    if (e.target.name === 'genre') setSelectedGenre(e.target.value);\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/api/folders', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then(res => res.json())\n      .then(res => {\n        notify(res);\n        getFolders();\n      })\n      .catch(err => { notify(err.message); });\n  }\n\n  function deleteFolder(id) {\n    fetch(`/api/folders/${id}`, { method: 'DELETE' })\n      .then(res => res.json())\n      .then(res => {\n        notify(res);\n        getFolders();\n      })\n      .catch(err => { notify(err.message); });\n  }\n\n  function sortAlbums() {\n    fetch('/api/albums/sort')\n      .then(res => res.json())\n      .then(message => { notify(message); getFolders(); })\n      .catch(err => { notify(err.message); });\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid container justify=\"center\">\n        <Typography variant=\"h5\" component=\"h5\">\n          Folders\n        </Typography>\n      </Grid>\n      <FormControl>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n        >\n          <TextField className={classes.form_element} name=\"name\" onChange={handleChange} label=\"Name\" variant=\"outlined\" />\n          <TextField className={classes.form_element} name=\"maxSize\" onChange={handleChange} label=\"Maximum Size\" variant=\"outlined\" />\n          <Select\n            variant=\"outlined\"\n            className={classes.form_element}\n            value={selectedGenre}\n            onChange={handleChange}\n            name=\"genre\"\n          >\n            {genres.map(el => <MenuItem value={el} key={uuidv4()}>{el}</MenuItem>)}\n          </Select>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n        >\n          <Button className={classes.form_element} onClick={handleSubmit} variant=\"contained\" color=\"primary\">Add</Button>\n          <Button className={classes.form_element} onClick={sortAlbums} variant=\"contained\" color=\"primary\">Sort Records</Button>\n        </Grid>\n      </FormControl>\n      <Grid container justify=\"center\">\n        {folders\n          ? folders.map(folder => (\n            <Grid key={uuidv4()} item xs={12} sm={6} md={4}>\n              <Folder data={folder} callback={deleteFolder} />\n            </Grid>\n          ))\n          : ''}\n      </Grid>\n    </Grid>\n  );\n}\n\nSettings.propTypes = {\n  notify: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Typography, Button, Card, CardContent, CardMedia,\n} from '@material-ui/core';\n\nexport default function LibCard({ album, callback }) {\n  const {\n    title, genre, cover_image, year, folder, position,\n  } = album;\n  const artist = title.split(' - ')[0];\n  const albumName = title.split(' - ')[1];\n\n  return (\n    <Card style={{\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'center',\n      margin: '.5rem',\n      flexDirection: 'column',\n      padding: '1rem 1rem 0 ',\n    }}\n    >\n      <CardMedia\n        style={{ width: 300, height: 300 }}\n        image={cover_image}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n          {albumName}\n          {' '}\n          -\n          {' '}\n          {year}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {artist}\n          {' '}\n          -\n          {' '}\n          {genre}\n        </Typography>\n        {folder ? (\n          <Typography variant=\"h5\" component=\"h4\">\n            {folder}\n            {typeof position === 'number' && `/${position}`}\n          </Typography>\n        ) : <p>Not yet sorted</p>}\n        <Button size=\"medium\" color=\"primary\" onClick={() => callback(album)}>\n          Remove\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nLibCard.propTypes = {\n  callback: propTypes.func.isRequired,\n  album: propTypes.shape({\n    title: propTypes.string,\n    genre: propTypes.string,\n    cover_image: propTypes.string,\n    year: propTypes.string,\n    folder: propTypes.string,\n    position: propTypes.number,\n  }).isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { Chip } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\n\nexport default function Filters({\n  selected, setSelected, genres, setGenres,\n}) {\n  function getGenres() {\n    fetch('/api/genres')\n      .then(res => res.json())\n      .then(res => {\n        setGenres(Object.keys(res));\n      });\n  }\n\n  useEffect(() => {\n    getGenres();\n    // eslint-disable-next-line\n  }, []);\n\n  function genreSelected(genre) {\n    return selected.includes(genre);\n  }\n\n  function toggleSelected(e) {\n    const genre = e.target.classList.contains('genre_filter')\n      ? e.target.getAttribute('name')\n      : e.target.parentNode.getAttribute('name');\n    if (genreSelected(genre)) setSelected(selected.filter(el => el !== genre));\n    else setSelected([...selected, genre]);\n  }\n\n  return (\n    <div className=\"filters\">\n      {genres\n        ? genres.map(genre => (\n          genreSelected(genre)\n            ? (\n              <Chip\n                className=\"genre_filter\"\n                key={uuidv4()}\n                label={genre}\n                clickable\n                onClick={toggleSelected}\n                name={genre}\n              />\n            )\n            : (\n              <Chip\n                className=\"genre_filter\"\n                color=\"primary\"\n                key={uuidv4()}\n                label={genre}\n                clickable\n                onClick={toggleSelected}\n                name={genre}\n              />\n            )\n        ))\n        : null}\n    </div>\n  );\n}\n\nFilters.propTypes = {\n  selected: propTypes.arrayOf(propTypes.string),\n  setSelected: propTypes.func.isRequired,\n  genres: propTypes.arrayOf(propTypes.string),\n  setGenres: propTypes.func.isRequired,\n};\n\nFilters.defaultProps = {\n  selected: [],\n  genres: null,\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\nimport {\n  FormControl, TextField, Grid, Typography,\n} from '@material-ui/core';\nimport LibCard from './LibCard';\nimport useStyles from './styles';\nimport Loading from './Loading';\nimport Filters from './Filters';\nimport LibPagination from './LibPagination';\n\nexport default function Library({ notify }) {\n  const [lib, setLib] = useState();\n  const [filteredLib, setFilteredLib] = useState();\n  const [pageResults, setPageResults] = useState();\n  const [selected, setSelected] = useState([]);\n  const [genres, setGenres] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState();\n  const limit = 10;\n  const classes = useStyles();\n\n  function getLibrary() {\n    fetch('/api/albums')\n      .then(response => response.json())\n      .then(data => {\n        setLib(data);\n        setFilteredLib(data);\n        setPageResults(data.slice(limit * (page - 1), limit * (page - 1) + limit));\n      })\n      .catch(err => { notify(err.message); });\n  }\n\n  function filterResults() {\n    if (lib) {\n      const query = new RegExp(searchQuery, 'i');\n      let filtered = lib.filter(el => query.test(el.title));\n      selected.forEach(el => {\n        filtered = filtered.filter(result => result.genre !== el);\n      });\n      setFilteredLib(filtered);\n      setPageResults(filtered.slice(limit * (page - 1), limit * (page - 1) + limit));\n    }\n  }\n\n  async function removeFromLibrary(album) {\n    fetch(`/api/albums/${album.id}`, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(response => {\n        notify(response);\n        setFilteredLib(filteredLib.filter(el => el.id !== album.id));\n        setPageResults(filteredLib.slice(limit * (page - 1), limit * (page - 1) + limit));\n      })\n      .catch(err => notify(err.message));\n  }\n\n  useEffect(() => {\n    getLibrary();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    filterResults();\n    // eslint-disable-next-line\n  }, [selected, searchQuery, page]);\n\n  useEffect(() => {\n    if (filteredLib) setCount(Math.ceil(filteredLib.length / limit));\n    // eslint-disable-next-line\n  }, [filteredLib]);\n\n  useEffect(() => {\n    if (count && count < page) setPage(1);\n    // eslint-disable-next-line\n  }, [count]);\n\n  return (\n    <main>\n      <Grid container justify=\"center\">\n        <FormControl className={classes.form_control}>\n          <TextField className={classes.form_element} onChange={e => setSearchQuery(e.target.value)} label=\"Search\" variant=\"outlined\" />\n        </FormControl>\n      </Grid>\n      <Grid container justify=\"center\">\n        <Filters\n          selected={selected}\n          setSelected={setSelected}\n          genres={genres}\n          setGenres={setGenres}\n        />\n      </Grid>\n      {filteredLib\n        ? (\n          <Grid container justify=\"center\">\n            <Typography component=\"h6\" variant=\"subtitle1\">\n              {filteredLib.length}\n              {filteredLib.length > 1 ? ' hits' : ' hit'}\n            </Typography>\n          </Grid>\n        )\n        : null}\n      <Grid container justify=\"space-evenly\">\n        {pageResults\n          ? pageResults.map(album => (\n            <Grid key={uuidv4()} item xs={12} sm={6} md={4}>\n              <LibCard album={album} callback={removeFromLibrary} />\n            </Grid>\n          ))\n          : <Loading />}\n      </Grid>\n      <Grid container justify=\"center\">\n        {count && filteredLib && filteredLib.length !== 0\n          ? <LibPagination count={count} page={page} setPage={setPage} />\n          : null}\n      </Grid>\n    </main>\n  );\n}\n\nLibrary.propTypes = {\n  notify: propTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport {\n  Paper, Tab, Tabs, Box,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport propTypes from 'prop-types';\nimport Home from './Home';\nimport Settings from './Settings';\nimport Library from './Library';\n\nconst useStyles = makeStyles({\n  app: {\n    backgroundColor: 'whitesmoke',\n    minHeight: '100vh',\n  },\n\n  notification: {\n    position: 'fixed',\n    padding: '1rem',\n    bottom: '1rem',\n    right: '1rem',\n    backgroundColor: 'blanchedalmond',\n    borderRadius: '.2rem',\n    zIndex: '1',\n  },\n});\n\nfunction TabPanel({ children, value, index }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const [value, setValue] = useState(0);\n  const [notification, setNotification] = useState('');\n  const classes = useStyles();\n\n  const notify = message => {\n    setNotification(message);\n    setTimeout(() => {\n      setNotification('');\n    }, 3000);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.app}>\n      {notification !== ''\n        ? <div className={classes.notification}>{notification}</div>\n        : ''}\n      <nav className=\"nav\">\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            centered\n          >\n            <Tab label=\"Home\" />\n            <Tab label=\"Library\" />\n            <Tab label=\"Settings\" />\n          </Tabs>\n        </Paper>\n      </nav>\n      <main>\n        <TabPanel value={value} index={0}>\n          <Home notify={notify} />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Library notify={notify} />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Settings notify={notify} />\n        </TabPanel>\n      </main>\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: propTypes.shape().isRequired,\n  value: propTypes.number.isRequired,\n  index: propTypes.number.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}