{"version":3,"sources":["Loading.js","styles.js","Card.jsx","LibPagination.jsx","Home.jsx","Folder.jsx","Settings.jsx","LibCard.jsx","Filters.jsx","Library.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Loading","type","color","height","width","timeout","useStyles","makeStyles","theme","form_control","display","justifyContent","form_element","margin","switch","app","backgroundColor","minHeight","notification","position","padding","bottom","right","borderRadius","zIndex","card","alignItems","textAlign","flexDirection","breakpoints","up","card__image","AlbumCard","album","callback","useState","genre","selectedGenre","setSelectedGenre","classes","title","cover_image","year","artist","split","albumName","Card","className","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","Select","id","value","onChange","e","target","style","marginTop","map","el","MenuItem","key","uuidv4","Button","size","onClick","root","spacing","LibPagination","count","page","setPage","Pagination","event","Home","notify","input","setInput","results","setResults","loading","setLoading","searchBarcode","setSearchBarcode","searchMasters","setSearchMasters","setCount","addToLibrary","result","master_url","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","message","handleSearch","preventDefault","query","res","data","pagination","pages","useEffect","Grid","container","justify","onSubmit","FormControl","TextField","label","FormControlLabel","control","Switch","checked","name","item","xs","sm","md","Folder","maxSize","records","Paper","length","top","cursor","fontSize","Settings","folders","setFolders","formData","setFormData","genres","setGenres","getFolders","handleChange","deleteFolder","Object","keys","direction","folder","LibCard","Filters","selected","setSelected","genreSelected","includes","toggleSelected","classList","contains","getAttribute","parentNode","filter","Chip","clickable","Library","lib","setLib","filteredLib","setFilteredLib","pageResults","setPageResults","searchQuery","setSearchQuery","removeFromLibrary","a","slice","RegExp","filtered","test","forEach","filterResults","Math","ceil","TabPanel","children","index","role","hidden","aria-labelledby","Box","p","defaultProps","App","setValue","setNotification","setTimeout","square","Tabs","indicatorColor","textColor","newValue","centered","Tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.cb409e45.chunk.js","sourcesContent":["import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function Loading() {\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#3f51b5\"\n      height={300}\n      width={300}\n      timeout={8000}\n    />\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form_control: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  form_element: {\n    margin: '.5rem',\n  },\n  switch: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  app: {\n    backgroundColor: 'whitesmoke',\n    minHeight: '100vh',\n  },\n  notification: {\n    position: 'fixed',\n    padding: '1rem',\n    bottom: '1rem',\n    right: '1rem',\n    backgroundColor: 'blanchedalmond',\n    borderRadius: '.2rem',\n    zIndex: '1',\n  },\n  card: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    margin: '.5rem',\n    flexDirection: 'column',\n    padding: 0,\n    [theme.breakpoints.up('sm')]: {\n      padding: '1rem',\n    },\n  },\n  card__image: {\n    width: 330,\n    height: 330,\n  }\n}));\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\nimport {\n  Select, MenuItem, Card, Typography, Button, CardMedia, CardContent,\n} from '@material-ui/core';\nimport useStyles from './styles';\n\nexport default function AlbumCard({ album, callback }) {\n  const [selectedGenre, setSelectedGenre] = useState(album.genre[0]);\n  const classes = useStyles();\n\n  const {\n    title, genre, cover_image, year,\n  } = album;\n  const artist = title.split(' - ')[0];\n  const albumName = title.split(' - ')[1];\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.card__image}\n        image={cover_image}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n          {albumName}\n          {' '}\n          -\n          {year}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {artist}\n        </Typography>\n        <Select\n          variant=\"outlined\"\n          id=\"demo-simple-select-filled\"\n          value={selectedGenre}\n          onChange={e => setSelectedGenre(e.target.value)}\n          style={{ marginTop: '1rem' }}\n        >\n          {genre.map(el => <MenuItem value={el} key={uuidv4()}>{el}</MenuItem>)}\n        </Select>\n      </CardContent>\n      <Button size=\"medium\" color=\"primary\" onClick={() => callback({ ...album, genre: selectedGenre })}>\n        Add\n      </Button>\n    </Card>\n  );\n}\n\nAlbumCard.propTypes = {\n  callback: propTypes.func.isRequired,\n  album: propTypes.shape({\n    title: propTypes.string,\n    genre: propTypes.arrayOf(propTypes.string),\n    cover_image: propTypes.string,\n    year: propTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Pagination } from '@material-ui/lab';\nimport propTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function LibPagination({ count, page, setPage }) {\n  const classes = useStyles();\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Pagination count={count} page={page} onChange={handleChange} size=\"small\" />\n    </div>\n  );\n}\n\nLibPagination.propTypes = {\n  count: propTypes.number.isRequired,\n  page: propTypes.number.isRequired,\n  setPage: propTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  TextField, FormControl, Grid, Button, Switch, FormControlLabel,\n} from '@material-ui/core';\nimport propTypes from 'prop-types';\nimport Loading from './Loading';\nimport AlbumCard from './Card';\nimport useStyles from './styles';\nimport LibPagination from './LibPagination';\n\nexport default function Home({ notify }) {\n  const [input, setInput] = useState('');\n  const [results, setResults] = useState();\n  const [loading, setLoading] = useState(false);\n  const [searchBarcode, setSearchBarcode] = useState(false);\n  const [searchMasters, setSearchMasters] = useState(false);\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState();\n  const classes = useStyles();\n\n  function addToLibrary(result) {\n    const {\n      id, genre, title, cover_image, year, master_url,\n    } = result;\n    const album = {\n      id, title, genre, cover_image, year, master_url,\n    };\n    fetch('/api/albums', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(album),\n    })\n      .then(response => response.json())\n      .then(response => { notify(response); })\n      .catch(err => { notify(err.message); });\n  }\n\n  function handleSearch(e) {\n    if (e) e.preventDefault();\n    if (input === '') {\n      notify('Search field can not be empty');\n      return;\n    }\n    let query = `/search?page=${page}`;\n    if (searchBarcode) query += '&barcode=true';\n    if (searchMasters) query += '&masters=true';\n    setLoading(true);\n    setResults(null);\n    setCount(null);\n    fetch(query, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({ query: input }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setLoading(false);\n        setResults(data.results);\n        setCount(data.pagination.pages);\n      });\n  }\n\n  useEffect(() => {\n    if (count) handleSearch();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <form onSubmit={handleSearch}>\n          <FormControl>\n            <TextField\n              className={classes.form_element}\n              onChange={e => setInput(e.target.value)}\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n            <FormControlLabel\n              className={classes.switch}\n              control={(\n                <Switch\n                  checked={searchBarcode}\n                  onChange={() => setSearchBarcode(!searchBarcode)}\n                  name=\"barcode\"\n                  color=\"primary\"\n                />\n              )}\n              label=\"Barcode\"\n            />\n            <FormControlLabel\n              className={classes.switch}\n              control={(\n                <Switch\n                  checked={searchMasters}\n                  onChange={() => setSearchMasters(!searchMasters)}\n                  name=\"barcode\"\n                  color=\"primary\"\n                />\n              )}\n              label=\"Master\"\n            />\n            <Button\n              className={classes.form_element}\n              onClick={handleSearch}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Search\n            </Button>\n          </FormControl>\n        </form>\n      </Grid>\n      <Grid container justify=\"space-evenly\">\n        {results\n          ? results.map(el => (\n            <Grid key={uuidv4()} item xs={12} sm={6} md={4}>\n              <AlbumCard album={el} callback={addToLibrary} />\n            </Grid>\n          ))\n          : ''}\n        {loading && <Loading />}\n      </Grid>\n      <Grid container justify=\"center\">\n        {count ? <LibPagination count={count} page={page} setPage={setPage} /> : null}\n      </Grid>\n    </>\n  );\n}\n\nHome.propTypes = {\n  notify: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Paper, Typography } from '@material-ui/core';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n\nexport default function Folder({\n  data: {\n    maxSize, records, name, genre, id,\n  }, callback,\n}) {\n  return (\n\n    <Paper style={{\n      padding: '1rem',\n      margin: '1rem',\n      textAlign: 'center',\n      position: 'relative',\n    }}\n    >\n      <Typography variant=\"h3\">\n        {name}\n      </Typography>\n      <Typography variant=\"body1\">\n        {records.length}\n        /\n        {maxSize}\n      </Typography>\n      <Typography variant=\"body2\">\n        {genre}\n      </Typography>\n      <DeleteOutlineOutlinedIcon\n        style={{\n          position: 'absolute',\n          top: '.5rem',\n          right: '.5rem',\n          cursor: 'pointer',\n        }}\n        color=\"secondary\"\n        fontSize=\"large\"\n        onClick={() => callback(id)}\n      />\n    </Paper>\n  );\n}\n\nFolder.propTypes = {\n  data: propTypes.shape({\n    maxSize: propTypes.string.isRequired,\n    records: propTypes.arrayOf(propTypes.number).isRequired,\n    name: propTypes.string.isRequired,\n    genre: propTypes.string.isRequired,\n    id: propTypes.string.isRequired,\n  }).isRequired,\n  callback: propTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\nimport {\n  MenuItem, Select, FormControl, TextField, Button, Grid, Typography,\n} from '@material-ui/core';\nimport Folder from './Folder';\nimport useStyles from './styles';\n\nexport default function Settings({ notify }) {\n  const [folders, setFolders] = useState();\n  const [formData, setFormData] = useState();\n  const [genres, setGenres] = useState(['']);\n  const [selectedGenre, setSelectedGenre] = useState(genres[0]);\n  const classes = useStyles();\n\n  function getGenres() {\n    fetch('/api/genres')\n      .then(res => res.json())\n      .then(res => {\n        setGenres(Object.keys(res));\n        setSelectedGenre(Object.keys(res)[0]);\n        setFormData({ ...formData, genre: Object.keys(res)[0] });\n      });\n  }\n\n  function getFolders() {\n    fetch('/api/folders')\n      .then(data => data.json())\n      .then(response => { setFolders(response); })\n      .catch(err => { notify(err.message); });\n  }\n\n  useEffect(() => {\n    getFolders();\n    getGenres();\n    // eslint-disable-next-line\n  }, []);\n\n  function handleChange(e) {\n    if (e.target.name === 'genre') setSelectedGenre(e.target.value);\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/api/folders', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then(res => res.json())\n      .then(res => {\n        notify(res);\n        getFolders();\n      })\n      .catch(err => { notify(err.message); });\n  }\n\n  function deleteFolder(id) {\n    fetch(`/api/folders/${id}`, { method: 'DELETE' })\n      .then(res => res.json())\n      .then(res => {\n        notify(res);\n        getFolders();\n      })\n      .catch(err => { notify(err.message); });\n  }\n\n  function sortAlbums() {\n    fetch('/api/albums/sort')\n      .then(res => res.json())\n      .then(message => { notify(message); getFolders(); })\n      .catch(err => { notify(err.message); });\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid container justify=\"center\">\n        <Typography variant=\"h5\" component=\"h5\">\n          Folders\n        </Typography>\n      </Grid>\n      <FormControl>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n        >\n          <TextField className={classes.form_element} name=\"name\" onChange={handleChange} label=\"Name\" variant=\"outlined\" />\n          <TextField className={classes.form_element} name=\"maxSize\" onChange={handleChange} label=\"Maximum Size\" variant=\"outlined\" />\n          <Select\n            variant=\"outlined\"\n            className={classes.form_element}\n            value={selectedGenre}\n            onChange={handleChange}\n            name=\"genre\"\n          >\n            {genres.map(el => <MenuItem value={el} key={uuidv4()}>{el}</MenuItem>)}\n          </Select>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n        >\n          <Button className={classes.form_element} onClick={handleSubmit} variant=\"contained\" color=\"primary\">Add</Button>\n          <Button className={classes.form_element} onClick={sortAlbums} variant=\"contained\" color=\"primary\">Sort Records</Button>\n        </Grid>\n      </FormControl>\n      <Grid container justify=\"center\">\n        {folders\n          ? folders.map(folder => (\n            <Grid key={uuidv4()} item xs={12} sm={6} md={4}>\n              <Folder data={folder} callback={deleteFolder} />\n            </Grid>\n          ))\n          : ''}\n      </Grid>\n    </Grid>\n  );\n}\n\nSettings.propTypes = {\n  notify: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Typography, Button, Card, CardContent, CardMedia,\n} from '@material-ui/core';\nimport useStyles from './styles';\n\nexport default function LibCard({ album, callback }) {\n  const {\n    title, genre, cover_image, year, folder, position,\n  } = album;\n  const artist = title.split(' - ')[0];\n  const albumName = title.split(' - ')[1];\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.card__image}\n        image={cover_image}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n          {albumName}\n          {' '}\n          -\n          {' '}\n          {year}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {artist}\n          {' '}\n          -\n          {' '}\n          {genre}\n        </Typography>\n        {folder ? (\n          <Typography variant=\"h5\" component=\"h4\">\n            {folder}\n            {typeof position === 'number' && `/${position}`}\n          </Typography>\n        ) : <p>Not yet sorted</p>}\n        <Button size=\"medium\" color=\"primary\" onClick={() => callback(album)}>\n          Remove\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nLibCard.propTypes = {\n  callback: propTypes.func.isRequired,\n  album: propTypes.shape({\n    title: propTypes.string,\n    genre: propTypes.string,\n    cover_image: propTypes.string,\n    year: propTypes.string,\n    folder: propTypes.string,\n    position: propTypes.number,\n  }).isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { Chip } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\n\nexport default function Filters({\n  selected, setSelected, genres, setGenres,\n}) {\n  function getGenres() {\n    fetch('/api/genres')\n      .then(res => res.json())\n      .then(res => {\n        setGenres(Object.keys(res));\n      });\n  }\n\n  useEffect(() => {\n    getGenres();\n    // eslint-disable-next-line\n  }, []);\n\n  function genreSelected(genre) {\n    return selected.includes(genre);\n  }\n\n  function toggleSelected(e) {\n    const genre = e.target.classList.contains('genre_filter')\n      ? e.target.getAttribute('name')\n      : e.target.parentNode.getAttribute('name');\n    if (genreSelected(genre)) setSelected(selected.filter(el => el !== genre));\n    else setSelected([...selected, genre]);\n  }\n\n  return (\n    <div className=\"filters\">\n      {genres\n        ? genres.map(genre => (\n          genreSelected(genre)\n            ? (\n              <Chip\n                className=\"genre_filter\"\n                key={uuidv4()}\n                label={genre}\n                clickable\n                onClick={toggleSelected}\n                name={genre}\n              />\n            )\n            : (\n              <Chip\n                className=\"genre_filter\"\n                color=\"primary\"\n                key={uuidv4()}\n                label={genre}\n                clickable\n                onClick={toggleSelected}\n                name={genre}\n              />\n            )\n        ))\n        : null}\n    </div>\n  );\n}\n\nFilters.propTypes = {\n  selected: propTypes.arrayOf(propTypes.string),\n  setSelected: propTypes.func.isRequired,\n  genres: propTypes.arrayOf(propTypes.string),\n  setGenres: propTypes.func.isRequired,\n};\n\nFilters.defaultProps = {\n  selected: [],\n  genres: null,\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport propTypes from 'prop-types';\nimport {\n  FormControl, TextField, Grid, Typography,\n} from '@material-ui/core';\nimport LibCard from './LibCard';\nimport useStyles from './styles';\nimport Loading from './Loading';\nimport Filters from './Filters';\nimport LibPagination from './LibPagination';\n\nexport default function Library({ notify }) {\n  const [lib, setLib] = useState();\n  const [filteredLib, setFilteredLib] = useState();\n  const [pageResults, setPageResults] = useState();\n  const [selected, setSelected] = useState([]);\n  const [genres, setGenres] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState();\n  const limit = 10;\n  const classes = useStyles();\n\n  function getLibrary() {\n    fetch('/api/albums')\n      .then(response => response.json())\n      .then(data => {\n        setLib(data);\n        setFilteredLib(data);\n        setPageResults(data.slice(limit * (page - 1), limit * (page - 1) + limit));\n      })\n      .catch(err => { notify(err.message); });\n  }\n\n  function filterResults() {\n    if (lib) {\n      const query = new RegExp(searchQuery, 'i');\n      let filtered = lib.filter(el => query.test(el.title));\n      selected.forEach(el => {\n        filtered = filtered.filter(result => result.genre !== el);\n      });\n      setFilteredLib(filtered);\n      setPageResults(filtered.slice(limit * (page - 1), limit * (page - 1) + limit));\n    }\n  }\n\n  async function removeFromLibrary(album) {\n    fetch(`/api/albums/${album.id}`, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(response => {\n        notify(response);\n        setFilteredLib(filteredLib.filter(el => el.id !== album.id));\n        setPageResults(filteredLib.slice(limit * (page - 1), limit * (page - 1) + limit));\n      })\n      .catch(err => notify(err.message));\n  }\n\n  useEffect(() => {\n    getLibrary();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    filterResults();\n    // eslint-disable-next-line\n  }, [selected, searchQuery, page]);\n\n  useEffect(() => {\n    if (filteredLib) setCount(Math.ceil(filteredLib.length / limit));\n    // eslint-disable-next-line\n  }, [filteredLib]);\n\n  useEffect(() => {\n    if (count && count < page) setPage(1);\n    // eslint-disable-next-line\n  }, [count]);\n\n  return (\n    <main>\n      <Grid container justify=\"center\">\n        <FormControl className={classes.form_control}>\n          <TextField className={classes.form_element} onChange={e => setSearchQuery(e.target.value)} label=\"Search\" variant=\"outlined\" />\n        </FormControl>\n      </Grid>\n      <Grid container justify=\"center\">\n        <Filters\n          selected={selected}\n          setSelected={setSelected}\n          genres={genres}\n          setGenres={setGenres}\n        />\n      </Grid>\n      {filteredLib\n        ? (\n          <Grid container justify=\"center\">\n            <Typography component=\"h6\" variant=\"subtitle1\">\n              {filteredLib.length}\n              {filteredLib.length > 1 ? ' hits' : ' hit'}\n            </Typography>\n          </Grid>\n        )\n        : null}\n      <Grid container justify=\"space-evenly\">\n        {pageResults\n          ? pageResults.map(album => (\n            <Grid key={uuidv4()} item xs={12} sm={6} md={4}>\n              <LibCard album={album} callback={removeFromLibrary} />\n            </Grid>\n          ))\n          : <Loading />}\n      </Grid>\n      <Grid container justify=\"center\">\n        {count && filteredLib && filteredLib.length !== 0\n          ? <LibPagination count={count} page={page} setPage={setPage} />\n          : null}\n      </Grid>\n    </main>\n  );\n}\n\nLibrary.propTypes = {\n  notify: propTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport {\n  Paper, Tab, Tabs, Box,\n} from '@material-ui/core';\nimport './App.css';\nimport propTypes from 'prop-types';\nimport Home from './Home';\nimport Settings from './Settings';\nimport Library from './Library';\nimport useStyles from './styles';\n\nfunction TabPanel({ children, value, index }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const [value, setValue] = useState(0);\n  const [notification, setNotification] = useState('');\n  const classes = useStyles();\n\n  const notify = message => {\n    setNotification(message);\n    setTimeout(() => {\n      setNotification('');\n    }, 3000);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.app}>\n      {notification !== ''\n        ? <div className={classes.notification}>{notification}</div>\n        : ''}\n      <nav className=\"nav\">\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            centered\n          >\n            <Tab label=\"Home\" />\n            <Tab label=\"Library\" />\n            <Tab label=\"Settings\" />\n          </Tabs>\n        </Paper>\n      </nav>\n      <main>\n        <TabPanel value={value} index={0}>\n          <Home notify={notify} />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Library notify={notify} />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Settings notify={notify} />\n        </TabPanel>\n      </main>\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: propTypes.shape().isRequired,\n  value: propTypes.number.isRequired,\n  index: propTypes.number.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}